{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf200
{\fonttbl\f0\fnil\fcharset0 Monaco;\f1\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red63\green127\blue95;\red127\green0\blue85;\red106\green62\blue62;
\red42\green0\blue255;\red0\green0\blue192;}
{\*\expandedcolortbl;;\csgenericrgb\c24706\c49804\c37255;\csgenericrgb\c49804\c0\c33333;\csgenericrgb\c41569\c24314\c24314;
\csgenericrgb\c16471\c0\c100000;\csgenericrgb\c0\c0\c75294;}
\margl1440\margr1440\vieww21120\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs36 \cf0   \cf2 // Note: This code snippet is a modified version of the Custom Login Dialog \cf0 \
  \cf2 // example found at: http://code.makery.ch/blog/javafx-dialogs-official/.\cf0 \
  \cf2 // Modifications by Rick Mercer.\cf0 \
  \cf2 //\cf0 \
  \cf2 // Rick is providing this to use "as is" for your Jukebox project\cf0 \
  \cf2 // and long as you in the above attribution.\cf0 \
  \cf3 private\cf0  \cf3 void\cf0  addNewUser() \{\
    \cf2 // Create a custom dialog with two input fields\cf0 \
    Dialog<Pair<String, String>> \cf4 dialog\cf0  = \cf3 new\cf0  Dialog<>();\
    \cf4 dialog\cf0 .setTitle(\cf5 "Adding new user"\cf0 );\
    \cf4 dialog\cf0 .setHeaderText(\cf5 "Enter the new user ID and password"\cf0 );\
\
    \cf2 // Set the button types\cf0 \
    ButtonType \cf4 loginButtonType\cf0  = \cf3 new\cf0  ButtonType(\cf5 "Add new user"\cf0 , ButtonData.\cf6 OK_DONE\cf0 );\
    \cf4 dialog\cf0 .getDialogPane().getButtonTypes().addAll(\cf4 loginButtonType\cf0 , ButtonType.\cf6 CANCEL\cf0 );\
\
    \cf2 // Create the Account Name and password labels and fields\cf0 \
    GridPane \cf4 grid\cf0  = \cf3 new\cf0  GridPane();\
    \cf4 grid\cf0 .setHgap(10);\
    \cf4 grid\cf0 .setVgap(10);\
    \cf4 grid\cf0 .setPadding(\cf3 new\cf0  Insets(20, 150, 10, 10));\
\
    TextField \cf4 username\cf0  = \cf3 new\cf0  TextField();\
    \cf4 username\cf0 .setPromptText(\cf5 "Account Name"\cf0 );\
    PasswordField \cf4 password\cf0  = \cf3 new\cf0  PasswordField();\
    \cf4 password\cf0 .setPromptText(\cf5 "Password"\cf0 );\
\
    \cf4 grid\cf0 .add(\cf3 new\cf0  Label(\cf5 "Account Name:"\cf0 ), 0, 0);\
    \cf4 grid\cf0 .add(\cf4 username\cf0 , 1, 0);\
    \cf4 grid\cf0 .add(\cf3 new\cf0  Label(\cf5 "Password:"\cf0 ), 0, 1);\
    \cf4 grid\cf0 .add(\cf4 password\cf0 , 1, 1);\
\
    \cf4 dialog\cf0 .getDialogPane().setContent(\cf4 grid\cf0 );\
\
    \cf2 // Convert the result to a \ul username\ulnone -password-pair when the Add user button is clicked.\cf0 \
    \cf2 // This is lambda instead of an instance of a new event handler: shorter code.\cf0 \
    \cf4 dialog\cf0 .setResultConverter(\cf4 dialogButton\cf0  -> \{\
      \cf3 if\cf0  (\cf4 dialogButton\cf0  == \cf4 loginButtonType\cf0 ) \{\
        \cf3 return\cf0  \cf3 new\cf0  Pair<>(\cf4 username\cf0 .getText(), \cf4 password\cf0 .getText());\
      \}\
      \cf3 return\cf0  \cf3 null\cf0 ;\
    \});\
\
    Optional<Pair<String, String>> \cf4 result\cf0  = \cf4 dialog\cf0 .showAndWait();\
\
    \cf4 result\cf0 .ifPresent(\cf4 usernamePassword\cf0  -> \{\
      System.\cf6 out\cf0 .println(\
          \cf5 "Username="\cf0  + \cf4 usernamePassword\cf0 .getKey() + \cf5 ", Password="\cf0  + \cf4 usernamePassword\cf0 .getValue());\
      \cf6 users\cf0 .add(\cf3 new\cf0  JukeboxAccount(\cf4 usernamePassword\cf0 .getKey(), \cf4 usernamePassword\cf0 .getValue()));\
    \});\
\
  \}\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f1\fs24 \cf0 \
}